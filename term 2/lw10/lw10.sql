ALTER SESSION SET NLS_DATE_FORMAT = 'DD-MM-YYYY';

-- TASK №1

ALTER TABLE TEACHER ADD BIRTHDAY DATE;
ALTER TABLE TEACHER ADD SALARY NUMBER;

UPDATE TEACHER SET BIRTHDAY = '12-02-1959' WHERE TEACHER = 'СМЛВ';
UPDATE TEACHER SET BIRTHDAY = '30-01-1987' WHERE TEACHER = 'АКНВЧ';
UPDATE TEACHER SET BIRTHDAY = '19-04-1991' WHERE TEACHER = 'КЛСНВ';
UPDATE TEACHER SET BIRTHDAY = '16-04-1964' WHERE TEACHER = 'ГРМН';
UPDATE TEACHER SET BIRTHDAY = '19-11-1988' WHERE TEACHER = 'ЛЩНК';
UPDATE TEACHER SET BIRTHDAY = '05-10-1966' WHERE TEACHER = 'БРКВЧ';
UPDATE TEACHER SET BIRTHDAY = '10-08-1976' WHERE TEACHER = 'ДДК';
UPDATE TEACHER SET BIRTHDAY = '11-09-1989' WHERE TEACHER = 'КБЛ';
UPDATE TEACHER SET BIRTHDAY = '24-12-1983' WHERE TEACHER = 'УРБ';
UPDATE TEACHER SET BIRTHDAY = '03-06-1990' WHERE TEACHER = 'РМНК';
UPDATE TEACHER SET BIRTHDAY = '10-05-1970' WHERE TEACHER = 'ПСТВЛВ';
UPDATE TEACHER SET BIRTHDAY = '26-10-1999' WHERE TEACHER = '?';
UPDATE TEACHER SET BIRTHDAY = '30-07-1984' WHERE TEACHER = 'ГРН';
UPDATE TEACHER SET BIRTHDAY = '11-03-1975' WHERE TEACHER = 'ЖЛК';
UPDATE TEACHER SET BIRTHDAY = '12-07-1969' WHERE TEACHER = 'БРТШВЧ';
UPDATE TEACHER SET BIRTHDAY = '26-02-1983' WHERE TEACHER = 'ЮДНКВ';
UPDATE TEACHER SET BIRTHDAY = '13-12-1991' WHERE TEACHER = 'БРНВСК';
UPDATE TEACHER SET BIRTHDAY = '20-01-1968' WHERE TEACHER = 'НВРВ';
UPDATE TEACHER SET BIRTHDAY = '21-12-1969' WHERE TEACHER = 'РВКЧ';
UPDATE TEACHER SET BIRTHDAY = '28-01-1975' WHERE TEACHER = 'ДМДК';
UPDATE TEACHER SET BIRTHDAY = '10-07-1983' WHERE TEACHER = 'МШКВСК';
UPDATE TEACHER SET BIRTHDAY = '08-10-1988' WHERE TEACHER = 'ЛБХ';
UPDATE TEACHER SET BIRTHDAY = '30-07-1984' WHERE TEACHER = 'ЗВГЦВ';
UPDATE TEACHER SET BIRTHDAY = '16-04-1964' WHERE TEACHER = 'БЗБРДВ';
UPDATE TEACHER SET BIRTHDAY = '12-05-1985' WHERE TEACHER = 'ПРКПЧК';
UPDATE TEACHER SET BIRTHDAY = '20-10-1980' WHERE TEACHER = 'НСКВЦ';
UPDATE TEACHER SET BIRTHDAY = '21-08-1990' WHERE TEACHER = 'МХВ';
UPDATE TEACHER SET BIRTHDAY = '13-08-1966' WHERE TEACHER = 'ЕЩНК';
UPDATE TEACHER SET BIRTHDAY = '11-11-1978' WHERE TEACHER = 'ЖРСК';

UPDATE TEACHER SET SALARY = 1030 WHERE TEACHER = 'СМЛВ';
UPDATE TEACHER SET SALARY = 1030 WHERE TEACHER = 'АКНВЧ';
UPDATE TEACHER SET SALARY = 980 WHERE TEACHER = 'КЛСНВ';
UPDATE TEACHER SET SALARY = 1050 WHERE TEACHER = 'ГРМН';
UPDATE TEACHER SET SALARY = 590 WHERE TEACHER = 'ЛЩНК';
UPDATE TEACHER SET SALARY = 870 WHERE TEACHER = 'БРКВЧ';
UPDATE TEACHER SET SALARY = 815 WHERE TEACHER = 'ДДК';
UPDATE TEACHER SET SALARY = 995 WHERE TEACHER = 'КБЛ';
UPDATE TEACHER SET SALARY = 1460 WHERE TEACHER = 'УРБ';
UPDATE TEACHER SET SALARY = 1120 WHERE TEACHER = 'РМНК';
UPDATE TEACHER SET SALARY = 1250 WHERE TEACHER = 'ПСТВЛВ';
UPDATE TEACHER SET SALARY = 333 WHERE TEACHER = '?';
UPDATE TEACHER SET SALARY = 1520 WHERE TEACHER = 'ГРН';
UPDATE TEACHER SET SALARY = 1430 WHERE TEACHER = 'ЖЛК';
UPDATE TEACHER SET SALARY = 900 WHERE TEACHER = 'БРТШВЧ';
UPDATE TEACHER SET SALARY = 875 WHERE TEACHER = 'ЮДНКВ';
UPDATE TEACHER SET SALARY = 970 WHERE TEACHER = 'БРНВСК';
UPDATE TEACHER SET SALARY = 780 WHERE TEACHER = 'НВРВ';
UPDATE TEACHER SET SALARY = 1150 WHERE TEACHER = 'РВКЧ';
UPDATE TEACHER SET SALARY = 805 WHERE TEACHER = 'ДМДК';
UPDATE TEACHER SET SALARY = 905 WHERE TEACHER = 'МШКВСК';
UPDATE TEACHER SET SALARY = 1200 WHERE TEACHER = 'ЛБХ';
UPDATE TEACHER SET SALARY = 1500 WHERE TEACHER = 'ЗВГЦВ';
UPDATE TEACHER SET SALARY = 905 WHERE TEACHER = 'БЗБРДВ';
UPDATE TEACHER SET SALARY = 715 WHERE TEACHER = 'ПРКПЧК';
UPDATE TEACHER SET SALARY = 880 WHERE TEACHER = 'НСКВЦ';
UPDATE TEACHER SET SALARY = 735 WHERE TEACHER = 'МХВ';
UPDATE TEACHER SET SALARY = 595 WHERE TEACHER = 'ЕЩНК';
UPDATE TEACHER SET SALARY = 850 WHERE TEACHER = 'ЖРСК';

-- TASK №2

SELECT REGEXP_SUBSTR(TEACHER_NAME, '(\S+)', 1, 1) || ' ' ||
       SUBSTR(REGEXP_SUBSTR(TEACHER_NAME, '(\S+)', 1, 2), 1, 1) || '. ' ||
       SUBSTR(REGEXP_SUBSTR(TEACHER_NAME, '(\S+)', 1, 3), 1, 1) || '. ' AS ФИО FROM TEACHER;

-- TASK №3

SELECT * FROM TEACHER WHERE TO_CHAR(BIRTHDAY, 'D') = 2;

-- TASK №4


CREATE OR REPLACE VIEW NEXT_MONTH AS
SELECT * FROM TEACHER
WHERE TO_CHAR(BIRTHDAY, 'MM') =
      (SELECT SUBSTR(TO_CHAR(TRUNC(LAST_DAY(SYSDATE)) + 1), 4, 2)
       FROM DUAL);

SELECT * FROM NEXT_MONTH;
DROP VIEW NEXT_MONTH;

-- TASK №5

CREATE OR REPLACE VIEW NUMBER_MONTHS AS
SELECT TO_CHAR(BIRTHDAY, 'MONTH') МЕСЯЦ, COUNT(*) КОЛИЧЕСТВО FROM TEACHER
GROUP BY TO_CHAR(BIRTHDAY, 'MONTH') HAVING COUNT(*) >= 1
ORDER BY КОЛИЧЕСТВО DESC;

SELECT * FROM NUMBER_MONTHS;

DROP VIEW NUMBER_MONTHS;

-- TASK №6

DECLARE
    CURSOR TEACHER_BIRTHDAY
        RETURN TEACHER%ROWTYPE IS
        SELECT * FROM TEACHER
        WHERE MOD((TO_CHAR(SYSDATE, 'YYYY') - TO_CHAR(BIRTHDAY, 'YYYY') + 1), 10) = 0;
    V_TEACHER  TEACHER%ROWTYPE;
BEGIN
    OPEN TEACHER_BIRTHDAY;

    FETCH TEACHER_BIRTHDAY INTO V_TEACHER;

    WHILE (TEACHER_BIRTHDAY%FOUND)
        LOOP
            DBMS_OUTPUT.PUT_LINE(V_TEACHER.TEACHER || ' ' || V_TEACHER.TEACHER_NAME || ' ' || V_TEACHER.PULPIT || ' ' ||
                                 V_TEACHER.BIRTHDAY || ' ' || V_TEACHER.SALARY);
            FETCH TEACHER_BIRTHDAY INTO V_TEACHER;
        END LOOP;

    CLOSE TEACHER_BIRTHDAY;
END;

-- TASK №7

DECLARE
    CURSOR TEACHERS_AVG_SALARY IS
        SELECT PULPIT, FLOOR(AVG(SALARY)) AS AVG_SALARY
        FROM TEACHER GROUP BY PULPIT;
    CURSOR FACULTY_AVG_SALARY IS
        SELECT FACULTY, AVG(SALARY)
        FROM TEACHER
                 JOIN PULPIT P ON TEACHER.PULPIT = P.PULPIT
        GROUP BY FACULTY;
    CURSOR FACULTIES_AVG_SALARY IS
        SELECT AVG(SALARY)
        FROM TEACHER;
    M_PULPIT  TEACHER.PULPIT%TYPE;
    M_SALARY  TEACHER.SALARY%TYPE;
    M_FACULTY PULPIT.FACULTY%TYPE;
BEGIN

    DBMS_OUTPUT.PUT_LINE('--------------- ПО КАФЕДРАМ -----------------');
    OPEN TEACHERS_AVG_SALARY;
    FETCH TEACHERS_AVG_SALARY INTO M_PULPIT, M_SALARY;

    WHILE (TEACHERS_AVG_SALARY%FOUND)
        LOOP
            DBMS_OUTPUT.PUT_LINE(M_PULPIT || ' ' || M_SALARY);
            FETCH TEACHERS_AVG_SALARY INTO M_PULPIT, M_SALARY;
        END LOOP;
    CLOSE TEACHERS_AVG_SALARY;

    DBMS_OUTPUT.PUT_LINE('--------------- ПО ФАКУЛЬТЕТАМ -----------------');
    OPEN FACULTY_AVG_SALARY;
    FETCH FACULTY_AVG_SALARY INTO M_FACULTY, M_SALARY;

    WHILE (FACULTY_AVG_SALARY%FOUND)
        LOOP
            DBMS_OUTPUT.PUT_LINE(M_FACULTY || ' ' || M_SALARY);
            FETCH FACULTY_AVG_SALARY INTO M_FACULTY, M_SALARY;
        END LOOP;
    CLOSE FACULTY_AVG_SALARY;

    DBMS_OUTPUT.PUT_LINE('--------------- ПО ВСЕМ ФАКУЛЬТЕТАМ -----------------');
    OPEN FACULTIES_AVG_SALARY;
    FETCH FACULTIES_AVG_SALARY INTO M_SALARY;
    DBMS_OUTPUT.PUT_LINE(ROUND(M_SALARY, 2));
    CLOSE FACULTIES_AVG_SALARY;
END;

-- TASK №8

DECLARE
   -- ОПРЕДЕЛЕНИЕ ТИПА ЗАПИСИ
   TYPE PERSON_RECORD IS RECORD (
      NAME VARCHAR2(100),
      AGE NUMBER
   );

   -- ОПРЕДЕЛЕНИЕ ВЛОЖЕННОГО ТИПА ЗАПИСИ
   TYPE FAMILY_RECORD IS RECORD (
      FATHER PERSON_RECORD,
      MOTHER PERSON_RECORD,
      CHILD PERSON_RECORD
   );

   -- ИНИЦИАЛИЗАЦИЯ ПЕРЕМЕННЫХ ЗАПИСИ
   MYFAMILY FAMILY_RECORD;

BEGIN
   -- ПРИСВОЕНИЕ ЗНАЧЕНИЙ ПОЛЯМ ЗАПИСИ
   MYFAMILY.FATHER.NAME := 'ИВАН';
   MYFAMILY.FATHER.AGE := 40;
   MYFAMILY.MOTHER.NAME := 'МАРИЯ';
   MYFAMILY.MOTHER.AGE := 38;
   MYFAMILY.CHILD.NAME := 'АЛЕКСЕЙ';
   MYFAMILY.CHILD.AGE := 10;

   -- ВЫВОД ЗНАЧЕНИЙ ПОЛЕЙ ЗАПИСИ
   DBMS_OUTPUT.PUT_LINE('ОТЕЦ: ' || MYFAMILY.FATHER.NAME || ', ВОЗРАСТ: ' || MYFAMILY.FATHER.AGE);
   DBMS_OUTPUT.PUT_LINE('МАТЬ: ' || MYFAMILY.MOTHER.NAME || ', ВОЗРАСТ: ' || MYFAMILY.MOTHER.AGE);
   DBMS_OUTPUT.PUT_LINE('РЕБЕНОК: ' || MYFAMILY.CHILD.NAME || ', ВОЗРАСТ: ' || MYFAMILY.CHILD.AGE);
END;